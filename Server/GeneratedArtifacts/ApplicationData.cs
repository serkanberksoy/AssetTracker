//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "User_Office", "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Office), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.User), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "User_UserType", "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.UserType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.User), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Asset_AssetType", "AssetType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.AssetType), "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.Asset), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "UserAsset_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.User), "UserAsset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.UserAsset), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "UserAsset_Asset", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Asset), "UserAsset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.UserAsset), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Proposal_Asset", "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Asset), "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.Proposal), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Supplier_Proposal", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Supplier), "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.Proposal), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Proposal_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Currency), "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.Proposal), true)]

#endregion

namespace ApplicationData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ApplicationDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ApplicationDataObjectContext object using the connection string found in the 'ApplicationDataObjectContext' section of the application configuration file.
        /// </summary>
        public ApplicationDataObjectContext() : base("name=ApplicationDataObjectContext", "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationDataObjectContext object.
        /// </summary>
        public ApplicationDataObjectContext(string connectionString) : base(connectionString, "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationDataObjectContext object.
        /// </summary>
        public ApplicationDataObjectContext(EntityConnection connection) : base(connection, "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Office> Offices
        {
            get
            {
                if ((_Offices == null))
                {
                    _Offices = base.CreateObjectSet<Office>("Offices");
                }
                return _Offices;
            }
        }
        private ObjectSet<Office> _Offices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserTypes
        {
            get
            {
                if ((_UserTypes == null))
                {
                    _UserTypes = base.CreateObjectSet<UserType>("UserTypes");
                }
                return _UserTypes;
            }
        }
        private ObjectSet<UserType> _UserTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Asset> Assets
        {
            get
            {
                if ((_Assets == null))
                {
                    _Assets = base.CreateObjectSet<Asset>("Assets");
                }
                return _Assets;
            }
        }
        private ObjectSet<Asset> _Assets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetType> AssetTypes
        {
            get
            {
                if ((_AssetTypes == null))
                {
                    _AssetTypes = base.CreateObjectSet<AssetType>("AssetTypes");
                }
                return _AssetTypes;
            }
        }
        private ObjectSet<AssetType> _AssetTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAsset> UserAssets
        {
            get
            {
                if ((_UserAssets == null))
                {
                    _UserAssets = base.CreateObjectSet<UserAsset>("UserAssets");
                }
                return _UserAssets;
            }
        }
        private ObjectSet<UserAsset> _UserAssets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Proposal> Proposals
        {
            get
            {
                if ((_Proposals == null))
                {
                    _Proposals = base.CreateObjectSet<Proposal>("Proposals");
                }
                return _Proposals;
            }
        }
        private ObjectSet<Proposal> _Proposals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Offices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOffices(Office office)
        {
            base.AddObject("Offices", office);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTypes(UserType userType)
        {
            base.AddObject("UserTypes", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssets(Asset asset)
        {
            base.AddObject("Assets", asset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetTypes(AssetType assetType)
        {
            base.AddObject("AssetTypes", assetType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAssets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAssets(UserAsset userAsset)
        {
            base.AddObject("UserAssets", userAsset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Proposals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProposals(Proposal proposal)
        {
            base.AddObject("Proposals", proposal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Asset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Asset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Asset object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="barcode">Initial value of the Barcode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="stockCount">Initial value of the StockCount property.</param>
        /// <param name="asset_AssetType">Initial value of the Asset_AssetType property.</param>
        public static Asset CreateAsset(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String barcode, global::System.String name, global::System.Int32 stockCount, global::System.Int32 asset_AssetType)
        {
            Asset asset = new Asset();
            asset.Id = id;
            asset.RowVersion = rowVersion;
            asset.Barcode = barcode;
            asset.Name = name;
            asset.StockCount = stockCount;
            asset.Asset_AssetType = asset_AssetType;
            return asset;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Barcode
        {
            get
            {
                return _Barcode;
            }
            set
            {
                OnBarcodeChanging(value);
                ReportPropertyChanging("Barcode");
                _Barcode = value;
                ReportPropertyChanged("Barcode");
                OnBarcodeChanged();
            }
        }
        private global::System.String _Barcode;
        partial void OnBarcodeChanging(global::System.String value);
        partial void OnBarcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockCount
        {
            get
            {
                return _StockCount;
            }
            set
            {
                OnStockCountChanging(value);
                ReportPropertyChanging("StockCount");
                _StockCount = value;
                ReportPropertyChanged("StockCount");
                OnStockCountChanged();
            }
        }
        private global::System.Int32 _StockCount;
        partial void OnStockCountChanging(global::System.Int32 value);
        partial void OnStockCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Asset_AssetType
        {
            get
            {
                return _Asset_AssetType;
            }
            set
            {
                OnAsset_AssetTypeChanging(value);
                ReportPropertyChanging("Asset_AssetType");
                _Asset_AssetType = value;
                ReportPropertyChanged("Asset_AssetType");
                OnAsset_AssetTypeChanged();
            }
        }
        private global::System.Int32 _Asset_AssetType;
        partial void OnAsset_AssetTypeChanging(global::System.Int32 value);
        partial void OnAsset_AssetTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Asset_AssetType", "AssetType")]
        public AssetType AssetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("LightSwitchApplication.Asset_AssetType", "AssetType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("LightSwitchApplication.Asset_AssetType", "AssetType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetType> AssetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("LightSwitchApplication.Asset_AssetType", "AssetType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetType>("LightSwitchApplication.Asset_AssetType", "AssetType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "UserAsset_Asset", "UserAsset")]
        public EntityCollection<UserAsset> UserAssets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAsset>("LightSwitchApplication.UserAsset_Asset", "UserAsset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAsset>("LightSwitchApplication.UserAsset_Asset", "UserAsset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Proposal_Asset", "Proposal")]
        public EntityCollection<Proposal> Proposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Proposal>("LightSwitchApplication.Proposal_Asset", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Proposal>("LightSwitchApplication.Proposal_Asset", "Proposal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="AssetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AssetType CreateAssetType(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String name)
        {
            AssetType assetType = new AssetType();
            assetType.Id = id;
            assetType.RowVersion = rowVersion;
            assetType.Name = name;
            return assetType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Asset_AssetType", "Asset")]
        public EntityCollection<Asset> Assets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("LightSwitchApplication.Asset_AssetType", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("LightSwitchApplication.Asset_AssetType", "Asset", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currentRate">Initial value of the CurrentRate property.</param>
        public static Currency CreateCurrency(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String name, global::System.Decimal currentRate)
        {
            Currency currency = new Currency();
            currency.Id = id;
            currency.RowVersion = rowVersion;
            currency.Name = name;
            currency.CurrentRate = currentRate;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CurrentRate
        {
            get
            {
                return _CurrentRate;
            }
            set
            {
                OnCurrentRateChanging(value);
                ReportPropertyChanging("CurrentRate");
                _CurrentRate = value;
                ReportPropertyChanged("CurrentRate");
                OnCurrentRateChanged();
            }
        }
        private global::System.Decimal _CurrentRate;
        partial void OnCurrentRateChanging(global::System.Decimal value);
        partial void OnCurrentRateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Proposal_Currency", "Proposal")]
        public EntityCollection<Proposal> Proposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Proposal>("LightSwitchApplication.Proposal_Currency", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Proposal>("LightSwitchApplication.Proposal_Currency", "Proposal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Office")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Office : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Office object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Office CreateOffice(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String name, global::System.DateTime createDate)
        {
            Office office = new Office();
            office.Id = id;
            office.RowVersion = rowVersion;
            office.Name = name;
            office.CreateDate = createDate;
            return office;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = value;
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = value;
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "User_Office", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("LightSwitchApplication.User_Office", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("LightSwitchApplication.User_Office", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Proposal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Proposal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Proposal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="proposalDatePrice">Initial value of the ProposalDatePrice property.</param>
        /// <param name="proposal_Asset">Initial value of the Proposal_Asset property.</param>
        /// <param name="supplier_Proposal">Initial value of the Supplier_Proposal property.</param>
        /// <param name="proposal_Currency">Initial value of the Proposal_Currency property.</param>
        public static Proposal CreateProposal(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.DateTime createDate, global::System.Decimal price, global::System.Decimal proposalDatePrice, global::System.Int32 proposal_Asset, global::System.Int32 supplier_Proposal, global::System.Int32 proposal_Currency)
        {
            Proposal proposal = new Proposal();
            proposal.Id = id;
            proposal.RowVersion = rowVersion;
            proposal.CreateDate = createDate;
            proposal.Price = price;
            proposal.ProposalDatePrice = proposalDatePrice;
            proposal.Proposal_Asset = proposal_Asset;
            proposal.Supplier_Proposal = supplier_Proposal;
            proposal.Proposal_Currency = proposal_Currency;
            return proposal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = value;
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = value;
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ProposalDatePrice
        {
            get
            {
                return _ProposalDatePrice;
            }
            set
            {
                OnProposalDatePriceChanging(value);
                ReportPropertyChanging("ProposalDatePrice");
                _ProposalDatePrice = value;
                ReportPropertyChanged("ProposalDatePrice");
                OnProposalDatePriceChanged();
            }
        }
        private global::System.Decimal _ProposalDatePrice;
        partial void OnProposalDatePriceChanging(global::System.Decimal value);
        partial void OnProposalDatePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Proposal_Asset
        {
            get
            {
                return _Proposal_Asset;
            }
            set
            {
                OnProposal_AssetChanging(value);
                ReportPropertyChanging("Proposal_Asset");
                _Proposal_Asset = value;
                ReportPropertyChanged("Proposal_Asset");
                OnProposal_AssetChanged();
            }
        }
        private global::System.Int32 _Proposal_Asset;
        partial void OnProposal_AssetChanging(global::System.Int32 value);
        partial void OnProposal_AssetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supplier_Proposal
        {
            get
            {
                return _Supplier_Proposal;
            }
            set
            {
                OnSupplier_ProposalChanging(value);
                ReportPropertyChanging("Supplier_Proposal");
                _Supplier_Proposal = value;
                ReportPropertyChanged("Supplier_Proposal");
                OnSupplier_ProposalChanged();
            }
        }
        private global::System.Int32 _Supplier_Proposal;
        partial void OnSupplier_ProposalChanging(global::System.Int32 value);
        partial void OnSupplier_ProposalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Proposal_Currency
        {
            get
            {
                return _Proposal_Currency;
            }
            set
            {
                OnProposal_CurrencyChanging(value);
                ReportPropertyChanging("Proposal_Currency");
                _Proposal_Currency = value;
                ReportPropertyChanged("Proposal_Currency");
                OnProposal_CurrencyChanged();
            }
        }
        private global::System.Int32 _Proposal_Currency;
        partial void OnProposal_CurrencyChanging(global::System.Int32 value);
        partial void OnProposal_CurrencyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Proposal_Asset", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("LightSwitchApplication.Proposal_Asset", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("LightSwitchApplication.Proposal_Asset", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("LightSwitchApplication.Proposal_Asset", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("LightSwitchApplication.Proposal_Asset", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Supplier_Proposal", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.Supplier_Proposal", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.Supplier_Proposal", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.Supplier_Proposal", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.Supplier_Proposal", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Proposal_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.Proposal_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.Proposal_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.Proposal_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("LightSwitchApplication.Proposal_Currency", "Currency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Supplier CreateSupplier(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String name, global::System.DateTime createDate)
        {
            Supplier supplier = new Supplier();
            supplier.Id = id;
            supplier.RowVersion = rowVersion;
            supplier.Name = name;
            supplier.CreateDate = createDate;
            return supplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = value;
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Supplier_Proposal", "Proposal")]
        public EntityCollection<Proposal> Proposal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Proposal>("LightSwitchApplication.Supplier_Proposal", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Proposal>("LightSwitchApplication.Supplier_Proposal", "Proposal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="user_Office">Initial value of the User_Office property.</param>
        /// <param name="user_UserType">Initial value of the User_UserType property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String name, global::System.String createDate, global::System.Int32 user_Office, global::System.Int32 user_UserType)
        {
            User user = new User();
            user.Id = id;
            user.RowVersion = rowVersion;
            user.Name = name;
            user.CreateDate = createDate;
            user.User_Office = user_Office;
            user.User_UserType = user_UserType;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = value;
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.String _CreateDate;
        partial void OnCreateDateChanging(global::System.String value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_Office
        {
            get
            {
                return _User_Office;
            }
            set
            {
                OnUser_OfficeChanging(value);
                ReportPropertyChanging("User_Office");
                _User_Office = value;
                ReportPropertyChanged("User_Office");
                OnUser_OfficeChanged();
            }
        }
        private global::System.Int32 _User_Office;
        partial void OnUser_OfficeChanging(global::System.Int32 value);
        partial void OnUser_OfficeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_UserType
        {
            get
            {
                return _User_UserType;
            }
            set
            {
                OnUser_UserTypeChanging(value);
                ReportPropertyChanging("User_UserType");
                _User_UserType = value;
                ReportPropertyChanged("User_UserType");
                OnUser_UserTypeChanged();
            }
        }
        private global::System.Int32 _User_UserType;
        partial void OnUser_UserTypeChanging(global::System.Int32 value);
        partial void OnUser_UserTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "User_Office", "Office")]
        public Office Office
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("LightSwitchApplication.User_Office", "Office").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("LightSwitchApplication.User_Office", "Office").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Office> OfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("LightSwitchApplication.User_Office", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Office>("LightSwitchApplication.User_Office", "Office", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "User_UserType", "UserType")]
        public UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("LightSwitchApplication.User_UserType", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("LightSwitchApplication.User_UserType", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("LightSwitchApplication.User_UserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("LightSwitchApplication.User_UserType", "UserType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "UserAsset_User", "UserAsset")]
        public EntityCollection<UserAsset> UserAssets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAsset>("LightSwitchApplication.UserAsset_User", "UserAsset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAsset>("LightSwitchApplication.UserAsset_User", "UserAsset", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UserAsset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAsset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAsset object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="assignDate">Initial value of the AssignDate property.</param>
        /// <param name="userAsset_User">Initial value of the UserAsset_User property.</param>
        /// <param name="userAsset_Asset">Initial value of the UserAsset_Asset property.</param>
        public static UserAsset CreateUserAsset(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.DateTime assignDate, global::System.Int32 userAsset_User, global::System.Int32 userAsset_Asset)
        {
            UserAsset userAsset = new UserAsset();
            userAsset.Id = id;
            userAsset.RowVersion = rowVersion;
            userAsset.AssignDate = assignDate;
            userAsset.UserAsset_User = userAsset_User;
            userAsset.UserAsset_Asset = userAsset_Asset;
            return userAsset;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AssignDate
        {
            get
            {
                return _AssignDate;
            }
            set
            {
                OnAssignDateChanging(value);
                ReportPropertyChanging("AssignDate");
                _AssignDate = value;
                ReportPropertyChanged("AssignDate");
                OnAssignDateChanged();
            }
        }
        private global::System.DateTime _AssignDate;
        partial void OnAssignDateChanging(global::System.DateTime value);
        partial void OnAssignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LeaveDate
        {
            get
            {
                return _LeaveDate;
            }
            set
            {
                OnLeaveDateChanging(value);
                ReportPropertyChanging("LeaveDate");
                _LeaveDate = value;
                ReportPropertyChanged("LeaveDate");
                OnLeaveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LeaveDate;
        partial void OnLeaveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLeaveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAsset_User
        {
            get
            {
                return _UserAsset_User;
            }
            set
            {
                OnUserAsset_UserChanging(value);
                ReportPropertyChanging("UserAsset_User");
                _UserAsset_User = value;
                ReportPropertyChanged("UserAsset_User");
                OnUserAsset_UserChanged();
            }
        }
        private global::System.Int32 _UserAsset_User;
        partial void OnUserAsset_UserChanging(global::System.Int32 value);
        partial void OnUserAsset_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAsset_Asset
        {
            get
            {
                return _UserAsset_Asset;
            }
            set
            {
                OnUserAsset_AssetChanging(value);
                ReportPropertyChanging("UserAsset_Asset");
                _UserAsset_Asset = value;
                ReportPropertyChanged("UserAsset_Asset");
                OnUserAsset_AssetChanged();
            }
        }
        private global::System.Int32 _UserAsset_Asset;
        partial void OnUserAsset_AssetChanging(global::System.Int32 value);
        partial void OnUserAsset_AssetChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "UserAsset_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.UserAsset_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.UserAsset_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.UserAsset_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LightSwitchApplication.UserAsset_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "UserAsset_Asset", "Asset")]
        public Asset Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("LightSwitchApplication.UserAsset_Asset", "Asset").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("LightSwitchApplication.UserAsset_Asset", "Asset").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asset> AssetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asset>("LightSwitchApplication.UserAsset_Asset", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asset>("LightSwitchApplication.UserAsset_Asset", "Asset", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserType CreateUserType(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String name)
        {
            UserType userType = new UserType();
            userType.Id = id;
            userType.RowVersion = rowVersion;
            userType.Name = name;
            return userType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "User_UserType", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("LightSwitchApplication.User_UserType", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("LightSwitchApplication.User_UserType", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
